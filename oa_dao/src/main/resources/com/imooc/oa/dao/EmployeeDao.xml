<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.oa.dao.EmployeeDao">


    <insert id="insert" parameterType="Employee">
        insert into employee values (#{sn},#{password},#{name},#{departmentSn},#{post})
    </insert>

    <update id="update" parameterType="Department">
        update employee set name=#{name},password=#{password},department_sn=#{departmentSn},post=#{post} where sn=#{sn}
    </update>


    <delete id="delete" parameterType="String">
        delete from employee where sn=#{sn}
    </delete>

    <resultMap id="employee" type="Employee">      <!--为什么要这样用了？-->
        <id property="sn" column="sn" javaType="String"/>  <!--主键用id属性来配置-->
        <result property="password" column="password" javaType="String"/>
        <result property="name" column="name" javaType="String"/>
        <result property="departmentSn" column="department_sn" javaType="String"/>
        <result property="post" column="post" javaType="String"/>

        <association property="department" column="department_sn"  javaType="Department">
            <!--如果各个属性列名字都不相同，可以不用写下面的配对，
            直接在association标签下添加resultMap属性，
            调用另外一个xml文件的resultMap-->

            <!--一定要记住这个里面的colum列的值，不能与上面的相同-->
            <!--这个colum列并不是数据库中真实存在名称，而是一个接收下面sql语句查出列名然后再次封装-->
            <id property="sn" column="dsn" javaType="String"/>
            <result property="name" column="dname" javaType="String"/>

        </association>

    </resultMap>
    <select id="select" parameterType="String" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
        where e.sn=#{sn};
    </select>

    <select id="selectAll" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
    </select>


    <select id="selectByDepartmentAndPost" resultMap="employee">
        select e.*,d.sn dsn,d.name dname
        from employee e left join department d
        on d.sn=e.department_sn
        where e.sn is not NULL
        <if test="dsn!=null">
            and e.department_sn=#{dsn}
        </if>
        <if test="post!=null">
            and e.post=#{post}
        </if>
    </select>


</mapper>